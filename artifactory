pipeline {
    agent any
    environment {
        PATH = "/opt/apache-maven-3.9.3/bin:${PATH}"
        ARTIFACTORY_CREDENTIALS = credentials('your-artifactory-credentials-id')
    }
    stages{
        stage("git clone"){
          steps {
            git 'https://github.com/srinunexcloud/javaapp-1.git'
          }
       }
       stage("codebuild"){
        steps {
            sh 'mvn clean package'
        }
       }
       stage("test-code"){
            steps {
            sh 'mvn test'
           }
       }
       stage("code deploy") {
            steps {
            deploy adapters: [tomcat9(credentialsId: 'ebbd9447-d422-4da7-81e1-92c800c3525e', path: '', url: 'http://43.204.24.244:8080/')], contextPath: null, war: '**/*.war'
            }
       } 
       stage('Publish to Artifactory') {
            steps {
                script {
                    // Deploy the Maven artifacts to JFrog Artifactory
                    def server = Artifactory.newServer url: 'http://15.207.19.141:8082/', credentialsId: jfrog
                    def rtMaven = Artifactory.newMavenBuild()
                    rtMaven.tool = 'maven' // Specify the Maven installation in Jenkins
                    rtMaven.deployer releaseRepo:'jenkins-release', snapshotRepo:'jenkins-snapshot', server: server
                    rtMaven.resolver releaseRepo:'jenkins-release', snapshotRepo:'jenkins-snapshot', server: server

                    // Run the Maven deployer
                    def buildInfo = rtMaven.run pom: 'pom.xml', goals: 'clean deploy -DskipTests'
                }
            }
        }

    }
}

